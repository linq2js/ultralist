{"version":3,"sources":["../index.js"],"names":["create","arrayMethods","split","items","subLists","list","clearListCache","listName","processedItems","orderedItems","length","modifyItems","callback","__immutable","newItems","slice","newList","__chainable","Object","assign","reduce","prototype","method","args","result","listResult","chainable","value","immuatable","item","index","arguments","remove","predicate","count","removedItems","filter","define","order","Array","get","includeMeta","subList","indexedItems","map","filteredItems","x","sort","a","b","getter","by","aValue","bValue","desc","forEach","extra","extraData"],"mappings":"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","file":"index.js","sourcesContent":["const arrayMethods = 'push pop shift unshift splice indexOf find findIndex toString forEach some every reduce'.split(\r\n  /\\s+/\r\n);\r\n\r\nexport default function create(...items) {\r\n  let subLists = {};\r\n  let list;\r\n\r\n  function clearListCache() {\r\n    for (let listName in subLists) {\r\n      delete subLists[listName].processedItems;\r\n      delete subLists[listName].orderedItems;\r\n    }\r\n    list.length = items.length;\r\n  }\r\n\r\n  function modifyItems(callback) {\r\n    if (list.__immutable) {\r\n      const newItems = items.slice();\r\n      callback(newItems);\r\n      const newList = create(...callback(newItems));\r\n      newList.__chainable = list.__chainable;\r\n      return newList;\r\n    }\r\n    clearListCache();\r\n    callback(items);\r\n    return list;\r\n  }\r\n\r\n  return (list = Object.assign(\r\n    arrayMethods.reduce((prototype, method) => {\r\n      prototype[method] = function(...args) {\r\n        let result;\r\n        const listResult = modifyItems(\r\n          items => (result = items[method](...args))\r\n        );\r\n        if (list.__chainable || method === 'push' || method === 'unshift')\r\n          return listResult;\r\n        return result;\r\n      };\r\n      return prototype;\r\n    }, {}),\r\n    {\r\n      length: items.length,\r\n      chainable(value = true) {\r\n        if (list.__chainable === value) return list;\r\n        const newList = create(...items);\r\n        newList.__chainable = value;\r\n        return newList;\r\n      },\r\n      immuatable(value = true) {\r\n        if (list.__immutable === value) return list;\r\n        const newList = create(...items);\r\n        newList.__immutable = value;\r\n        return newList;\r\n      },\r\n      slice(...args) {\r\n        return create(...items.slice(...args));\r\n      },\r\n      item(index, value) {\r\n        if (arguments.length === 1) return items[index];\r\n        return modifyItems(items => (items[index] = value));\r\n      },\r\n      remove(predicate, count = 0) {\r\n        let removedItems = 0;\r\n        const newItems = items.filter(item => {\r\n          if (count && removedItems >= count) return true;\r\n          if (predicate(item)) {\r\n            removedItems++;\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n        if (removedItems) {\r\n          if (list.__immutable) {\r\n            return create(...newItems);\r\n          }\r\n\r\n          items = newItems;\r\n          clearListCache();\r\n        }\r\n\r\n        return list;\r\n      },\r\n      define(listName, { filter, order } = {}) {\r\n        if (order && !(order instanceof Array)) {\r\n          order = [order];\r\n        }\r\n        subLists[listName] = { filter, order };\r\n        return list;\r\n      },\r\n      get(listName = 'default', includeMeta = false) {\r\n        let subList = subLists[listName];\r\n        if (!subList) {\r\n          // create default list with no filter and no order\r\n          subLists[listName] = subList = {};\r\n        }\r\n\r\n        if (!subList.processedItems) {\r\n          const indexedItems = items.map((item, index) => ({ index, item }));\r\n          const filteredItems = subList.filter\r\n            ? indexedItems.filter(x => subList.filter(x.item))\r\n            : indexedItems;\r\n          const orderedItems = subList.order\r\n            ? filteredItems.slice().sort((a, b) => {\r\n              for (let index = 0; index < subList.order.length; index++) {\r\n                const order = subList.order[index];\r\n                const getter = order.by;\r\n                const aValue = getter(a.item);\r\n                const bValue = getter(b.item);\r\n                if (aValue > bValue) return order.desc ? -1 : 1;\r\n                if (aValue < bValue) return order.desc ? 1 : -1;\r\n              }\r\n              return 0;\r\n            })\r\n            : filteredItems;\r\n\r\n          orderedItems.forEach((x, index) => (x.order = index));\r\n\r\n          subList.processedItems = filteredItems;\r\n          subList.orderedItems = orderedItems.map(x => x.item);\r\n\r\n          if (subList.extra) {\r\n            subList.extraData =\r\n              subList.extra(subList.processedItems, subList.orderedItems) || {};\r\n          }\r\n        }\r\n\r\n        if (typeof includeMeta === 'string')\r\n          return subList.extraData[includeMeta];\r\n\r\n        return includeMeta ? subList.processedItems : subList.orderedItems;\r\n      }\r\n    }\r\n  ));\r\n}\r\n"]}